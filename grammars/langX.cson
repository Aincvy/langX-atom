name: 'langX'
scopeName: 'langX'
type: 'tree-sitter'
parser: 'tree-sitter-langx'

fileTypes: ['lx' ]
scopes:
  '''
  func_declar_stmt > KEY_FUNCTION,
  lambda_stmt > KEY_FUNCTION,
  class_name_prefix > KEY_AUTO,
  class_name_suffix > KEY_EXTEND,
  KEY_IS,
  KEY_TRY,
  KEY_CATCH
  ''': 'keyword.control'

  '''
  KEY_IF,
  KEY_ELSE,
  KEY_SWITCH,
  KEY_CASE,
  KEY_DEFAULT,
  KEY_WHILE,
  KEY_FOR,
  KEY_BREAK,
  KEY_RETURN,
  KEY_CONTINUE
  ''': 'keyword.control'

  '''
  KEY_LOCAL,
  KEY_CONST,
  KEY_RESTRICT,
  KEY_SET,
  KEY_PUBLIC,
  KEY_REQUIRE,
  KEY_REQUIRE_ONCE,
  KEY_INCLUDE,
  KEY_REF
  ''': 'keyword.control'

  '''
  KEY_DELETE,
  KEY_NEW,
  KEY_THIS
  ''': 'keyword.control'

  'null_expr' : 'constant.language.null'
  'KEY_TRUE': 'constant.language.boolean'
  'KEY_FALSE': 'constant.language.boolean'

  'positive_number_expr' : 'constant.numeric'
  'string_expr': 'string.source.embedded'

  'class_declar_stmt > id_expr' : 'entity.name.class'
  'static_member_stmt > id_expr:nth-child(0)' : 'entity.name.class'
  'func_declar_stmt > func_name_types' : 'entity.name.function'

  'new_expr > id_expr': 'entity.name.class'
  'class_body_items > var_declar_stmt > id_expr': 'variable.other.object.property'
  'class_body_items > single_assign_stmt > common_assignable_expr > common_others_values_expr > id_expr': 'variable.other.object.property'

  '''
  OP_AND,
  OP_OR,
  OP_NOT,
  OP_GT,
  OP_LT,
  OP_GE,
  OP_LE,
  OP_EQ,
  OP_NE,
  OP_SCOPE,
  BIT_AND,
  BIT_OR,
  BIT_XOR,
  BIT_NOT,
  BIT_LEFT_SHIFT,
  BIT_RIGHT_SHIFT,
  OP_ADD,
  OP_SUB,
  OP_MUL,
  OP_DIV,
  OP_MOD,
  OP_ASSIGN,
  OP_ADD_EQ,
  OP_SUB_EQ,
  OP_MUL_EQ,
  OP_DIV_EQ,
  OP_MOD_EQ,
  OP_INC,
  OP_DEC,
  ''': 'keyword.operator'

  'COMMENT_LINE': 'comment'
  'COMMENT_BLOCK': 'comment.block'

  'namespace_declar_stmt > namespace_name_stmt': 'entity.name.package'
  'namespace_ref_stmt > namespace_name_stmt': 'entity.name.package'

  '''
  var_declar_stmt > id_expr,
  ''': 'support.variable'

folds: [
  {
    type: 'comment'
  }
  {
    type: 'code_block'
    start: {index: 0}
    end: {index: -1}
  }
  {
    type: 'class_body'
    start: {index: 0}
    end: {index: -1}
  }
]

comments:
  start: '// '
